{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Desktop\\\\odd-genius\\\\frontend\\\\src\\\\components\\\\dashboard\\\\KPIRow.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst KPIContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  \n  @media (max-width: 992px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n  }\n`;\nconst KPICard = styled.div`\n  background-color: var(--color-bg-secondary);\n  border-radius: var(--border-radius-lg);\n  padding: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: var(--shadow-sm);\n`;\nconst KPITitle = styled.h3`\n  font-size: 0.875rem;\n  color: var(--color-text-secondary);\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n`;\nconst KPIValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: var(--color-text-primary);\n`;\nconst KPISubtext = styled.div`\n  font-size: 0.75rem;\n  color: var(--color-text-tertiary);\n  margin-top: 0.5rem;\n`;\nconst KPIRow = () => {\n  // In a real app, these would come from an API or context\n  const kpiData = [{\n    title: 'Average ROI',\n    value: '+12.3%',\n    subtext: 'Last 30 days',\n    positive: true\n  }, {\n    title: 'Success Rate',\n    value: '68%',\n    subtext: '52 of 76 bets',\n    positive: true\n  }, {\n    title: 'Matches Today',\n    value: '87',\n    subtext: '14 leagues',\n    positive: null\n  }, {\n    title: 'Live Now',\n    value: '23',\n    subtext: 'Current',\n    positive: null\n  }];\n  return /*#__PURE__*/React.createElement(KPIContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, kpiData.map((kpi, index) => /*#__PURE__*/React.createElement(KPICard, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KPITitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, kpi.title), /*#__PURE__*/React.createElement(KPIValue, {\n    style: {\n      color: kpi.positive === true ? 'var(--color-success)' : kpi.positive === false ? 'var(--color-danger)' : 'var(--color-text-primary)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, kpi.value), /*#__PURE__*/React.createElement(KPISubtext, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, kpi.subtext))));\n};\nexport default KPIRow;","map":{"version":3,"names":["React","styled","KPIContainer","div","KPICard","KPITitle","h3","KPIValue","KPISubtext","KPIRow","kpiData","title","value","subtext","positive","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","kpi","index","key","style","color"],"sources":["C:/Users/mathe/OneDrive/Desktop/odd-genius/frontend/src/components/dashboard/KPIRow.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst KPIContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 1rem;\r\n  margin-bottom: 1.5rem;\r\n  \r\n  @media (max-width: 992px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  \r\n  @media (max-width: 576px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst KPICard = styled.div`\r\n  background-color: var(--color-bg-secondary);\r\n  border-radius: var(--border-radius-lg);\r\n  padding: 1.25rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: var(--shadow-sm);\r\n`;\r\n\r\nconst KPITitle = styled.h3`\r\n  font-size: 0.875rem;\r\n  color: var(--color-text-secondary);\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst KPIValue = styled.div`\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: var(--color-text-primary);\r\n`;\r\n\r\nconst KPISubtext = styled.div`\r\n  font-size: 0.75rem;\r\n  color: var(--color-text-tertiary);\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst KPIRow: React.FC = () => {\r\n  // In a real app, these would come from an API or context\r\n  const kpiData = [\r\n    {\r\n      title: 'Average ROI',\r\n      value: '+12.3%',\r\n      subtext: 'Last 30 days',\r\n      positive: true\r\n    },\r\n    {\r\n      title: 'Success Rate',\r\n      value: '68%',\r\n      subtext: '52 of 76 bets',\r\n      positive: true\r\n    },\r\n    {\r\n      title: 'Matches Today',\r\n      value: '87',\r\n      subtext: '14 leagues',\r\n      positive: null\r\n    },\r\n    {\r\n      title: 'Live Now',\r\n      value: '23',\r\n      subtext: 'Current',\r\n      positive: null\r\n    }\r\n  ];\r\n  \r\n  return (\r\n    <KPIContainer>\r\n      {kpiData.map((kpi, index) => (\r\n        <KPICard key={index}>\r\n          <KPITitle>{kpi.title}</KPITitle>\r\n          <KPIValue \r\n            style={{ \r\n              color: kpi.positive === true \r\n                ? 'var(--color-success)' \r\n                : (kpi.positive === false ? 'var(--color-danger)' : 'var(--color-text-primary)')\r\n            }}\r\n          >\r\n            {kpi.value}\r\n          </KPIValue>\r\n          <KPISubtext>{kpi.subtext}</KPISubtext>\r\n        </KPICard>\r\n      ))}\r\n    </KPIContainer>\r\n  );\r\n};\r\n\r\nexport default KPIRow;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,OAAO,GAAGH,MAAM,CAACE,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAME,QAAQ,GAAGJ,MAAM,CAACK,EAAE;AAC1B;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,QAAQ,GAAGN,MAAM,CAACE,GAAG;AAC3B;AACA;AACA;AACA,CAAC;AAED,MAAMK,UAAU,GAAGP,MAAM,CAACE,GAAG;AAC7B;AACA;AACA;AACA,CAAC;AAED,MAAMM,MAAgB,GAAGA,CAAA,KAAM;EAC7B;EACA,MAAMC,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,aAAa;IACpBC,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE,cAAc;IACvBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE,eAAe;IACxBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,KAAK,EAAE,eAAe;IACtBC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE,YAAY;IACrBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE,SAAS;IAClBC,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,oBACEd,KAAA,CAAAe,aAAA,CAACb,YAAY;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACVX,OAAO,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACtBxB,KAAA,CAAAe,aAAA,CAACX,OAAO;IAACqB,GAAG,EAAED,KAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBrB,KAAA,CAAAe,aAAA,CAACV,QAAQ;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEE,GAAG,CAACZ,KAAgB,CAAC,eAChCX,KAAA,CAAAe,aAAA,CAACR,QAAQ;IACPmB,KAAK,EAAE;MACLC,KAAK,EAAEJ,GAAG,CAACT,QAAQ,KAAK,IAAI,GACxB,sBAAsB,GACrBS,GAAG,CAACT,QAAQ,KAAK,KAAK,GAAG,qBAAqB,GAAG;IACxD,CAAE;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEDE,GAAG,CAACX,KACG,CAAC,eACXZ,KAAA,CAAAe,aAAA,CAACP,UAAU;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEE,GAAG,CAACV,OAAoB,CAC9B,CACV,CACW,CAAC;AAEnB,CAAC;AAED,eAAeJ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}