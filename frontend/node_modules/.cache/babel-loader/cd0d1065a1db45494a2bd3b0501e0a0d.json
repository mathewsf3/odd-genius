{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Desktop\\\\odd-genius\\\\frontend\\\\src\\\\context\\\\MatchContext.tsx\";\nimport React, { createContext, useContext, useState } from 'react';\n\n// This is a placeholder interface - you'll need to update this when you create the fixture type\n\nconst MatchContext = createContext({\n  selectedMatch: null,\n  setSelectedMatch: () => {},\n  isModalOpen: false,\n  openModal: () => {},\n  closeModal: () => {}\n});\nexport const MatchProvider = ({\n  children\n}) => {\n  const [selectedMatch, setSelectedMatch] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/React.createElement(MatchContext.Provider, {\n    value: {\n      selectedMatch,\n      setSelectedMatch,\n      isModalOpen,\n      openModal,\n      closeModal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useMatch = () => useContext(MatchContext);","map":{"version":3,"names":["React","createContext","useContext","useState","MatchContext","selectedMatch","setSelectedMatch","isModalOpen","openModal","closeModal","MatchProvider","children","setIsModalOpen","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useMatch"],"sources":["C:/Users/mathe/OneDrive/Desktop/odd-genius/frontend/src/context/MatchContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\n// This is a placeholder interface - you'll need to update this when you create the fixture type\r\ninterface Fixture {\r\n  event_key: string;\r\n  event_home_team: string;\r\n  event_away_team: string;\r\n  [key: string]: any;\r\n}\r\n\r\ninterface MatchContextType {\r\n  selectedMatch: Fixture | null;\r\n  setSelectedMatch: (match: Fixture | null) => void;\r\n  isModalOpen: boolean;\r\n  openModal: () => void;\r\n  closeModal: () => void;\r\n}\r\n\r\nconst MatchContext = createContext<MatchContextType>({\r\n  selectedMatch: null,\r\n  setSelectedMatch: () => {},\r\n  isModalOpen: false,\r\n  openModal: () => {},\r\n  closeModal: () => {},\r\n});\r\n\r\ninterface MatchProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const MatchProvider: React.FC<MatchProviderProps> = ({ children }) => {\r\n  const [selectedMatch, setSelectedMatch] = useState<Fixture | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  \r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  \r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  \r\n  return (\r\n    <MatchContext.Provider \r\n      value={{ \r\n        selectedMatch, \r\n        setSelectedMatch, \r\n        isModalOpen, \r\n        openModal, \r\n        closeModal \r\n      }}\r\n    >\r\n      {children}\r\n    </MatchContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMatch = () => useContext(MatchContext);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;;AAgBA,MAAMC,YAAY,GAAGH,aAAa,CAAmB;EACnDI,aAAa,EAAE,IAAI;EACnBC,gBAAgB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAC1BC,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;EACnBC,UAAU,EAAEA,CAAA,KAAM,CAAC;AACrB,CAAC,CAAC;AAMF,OAAO,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC3E,MAAM,CAACN,aAAa,EAAEC,gBAAgB,CAAC,GAAGH,QAAQ,CAAiB,IAAI,CAAC;EACxE,MAAM,CAACI,WAAW,EAAEK,cAAc,CAAC,GAAGT,QAAQ,CAAU,KAAK,CAAC;EAE9D,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtBI,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMH,UAAU,GAAGA,CAAA,KAAM;IACvBG,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEZ,KAAA,CAAAa,aAAA,CAACT,YAAY,CAACU,QAAQ;IACpBC,KAAK,EAAE;MACLV,aAAa;MACbC,gBAAgB;MAChBC,WAAW;MACXC,SAAS;MACTC;IACF,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEDV,QACoB,CAAC;AAE5B,CAAC;AAED,OAAO,MAAMW,QAAQ,GAAGA,CAAA,KAAMpB,UAAU,CAACE,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}